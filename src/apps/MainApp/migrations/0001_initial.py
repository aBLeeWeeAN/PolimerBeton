# Generated by Django 5.1 on 2024-09-01 18:39

import django.db.models.deletion
import encrypted_model_fields.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "client_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Client ID"
                    ),
                ),
                (
                    "last_name",
                    encrypted_model_fields.fields.EncryptedCharField(
                        default="нет фамилии", verbose_name="Last name"
                    ),
                ),
                (
                    "first_name",
                    encrypted_model_fields.fields.EncryptedCharField(
                        default="нет имени", verbose_name="First name"
                    ),
                ),
                (
                    "middle_name",
                    encrypted_model_fields.fields.EncryptedCharField(
                        null=True, verbose_name="Middle name"
                    ),
                ),
                (
                    "phone_number",
                    encrypted_model_fields.fields.EncryptedCharField(
                        default="нет телефона", verbose_name="Phone number"
                    ),
                ),
                (
                    "phone_number_hash",
                    models.CharField(
                        default="нет хэша телефона",
                        max_length=64,
                        unique=True,
                        verbose_name="Phone number hash",
                    ),
                ),
                (
                    "privacy_policy_agree",
                    models.BooleanField(
                        default=False,
                        verbose_name="The client agrees with the privacy policy",
                    ),
                ),
                (
                    "available_attempts",
                    models.PositiveIntegerField(
                        default=3, verbose_name="Available attempts"
                    ),
                ),
                (
                    "blocked_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Blocked until"
                    ),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
                "db_table": "clients",
            },
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "request_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Request ID"
                    ),
                ),
                (
                    "request_number",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Request number for this client"
                    ),
                ),
                (
                    "request_datetime",
                    models.DateTimeField(
                        auto_now_add=True,
                        verbose_name="Date and time of registration for this request",
                    ),
                ),
                (
                    "client_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="MainApp.client",
                        verbose_name="Client ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Request",
                "verbose_name_plural": "Requests",
                "db_table": "requests",
                "unique_together": {("client_id", "request_number")},
            },
        ),
    ]
