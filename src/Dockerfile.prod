#? --- Stage 1. Build the Node.js frontend
#? ---------------------------------------
FROM node:24.8-alpine AS frontend_builder
WORKDIR /usr/src/polimerbeton

COPY package.json package-lock.json /usr/src/polimerbeton/
RUN npm install --omit=dev

#? --- Stage 2. Build the Django backend
#? -------------------------------------
FROM python:3.13-slim AS backend_builder
WORKDIR /usr/src/polimerbeton

# Setup Python environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

RUN pip install poetry
COPY pyproject.toml poetry.lock /usr/src/polimerbeton/

RUN poetry config virtualenvs.create false \
    && poetry install --no-root --without dev
    
#? --- Stage 3. Execute "production" scenario for Polimerbeton
#? -----------------------------------------------------------
FROM python:3.13-slim AS production

# Create directory for the app user
RUN mkdir -p /home/warden

# Create the app user
RUN addgroup --system warden && adduser --system --group warden

# create the appropriate directories
ENV HOME=/home/warden \
    APP_HOME=/home/warden/www/polimerbeton

RUN mkdir -p $APP_HOME
RUN mkdir -p $APP_HOME/scripts
RUN mkdir -p $APP_HOME/staticfiles

WORKDIR $APP_HOME

# Install system dependencies
RUN apt-get update && \
    apt-get install -y netcat-openbsd ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Copy Node.js runtime form frontend_builder
COPY --from=frontend_builder /usr/local/bin/node /usr/local/bin/
# COPY --from=frontend_builder /usr/local/lib/node_modules /usr/local/lib/node_modules

# Copy installed dependencies from "builders" stage (Node.js and Poetry)
COPY --from=frontend_builder /usr/src/polimerbeton/node_modules $APP_HOME/node_modules
COPY --from=backend_builder /usr/local /usr/local

# Setup Python environment variables
# and add Node.js dependencies BINs to PATH
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="$APP_HOME/node_modules/.bin:$PATH"

# Copy and setup entrypoint.sh
# COPY ./scripts/entrypoint.prod.sh $APP_HOME/scripts/entrypoint.prod.sh
# RUN sed -i 's/\r$//g' $APP_HOME/scripts/entrypoint.prod.sh
# RUN chmod +x $APP_HOME/scripts/entrypoint.prod.sh

# Copy project
COPY . $APP_HOME

# Setup entrypoint.prod.sh
RUN sed -i 's/\r$//g' $APP_HOME/scripts/entrypoint.prod.sh && \
    chmod +x $APP_HOME/scripts/entrypoint.prod.sh

# Chown all the files to the app user
RUN chown -R warden:warden $APP_HOME

# Change to the app user
USER warden

# Run entrypoint.prod.sh
ENTRYPOINT ["/home/warden/www/polimerbeton/scripts/entrypoint.prod.sh"]